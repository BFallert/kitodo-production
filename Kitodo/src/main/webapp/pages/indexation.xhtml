<!--
 *
 * (c) Kitodo. Key to digital objects e. V. <contact@kitodo.org>
 *
 * This file is part of the Kitodo project.
 *
 * It is licensed under GNU General Public License version 3 or later.
 *
 * For the full copyright and license information, please read the
 * GPL3-License.txt file that was distributed with this source code.
 *
-->

<ui:composition
        template="/WEB-INF/templates/base.xhtml"
        xmlns:f="http://xmlns.jcp.org/jsf/core"
        xmlns:h="http://xmlns.jcp.org/jsf/html"
        xmlns:ui="http://xmlns.jcp.org/jsf/facelets"
        xmlns:p="http://primefaces.org/ui">
    <ui:define name="content">
        <p:panel id="listWrapper">
            <p:panel styleClass="content-header">
                <h3>
                    <h:outputText value="#{msgs.indexing}"/>
                </h3>
            </p:panel>
            <p:panel>
                <h:form id="indexing-form">
                    <ui:fragment rendered="#{empty indexingForm.serverInformation}">
                        <h:outputText value="The elastic search server is not running."/>
                    </ui:fragment>
                    <ui:fragment rendered="#{not empty indexingForm.serverInformation}">
                        <p:panel id="indexingTable" widgetVar="indexingTable">
                            <h3>#{msgs.mapping}</h3>
                            <p:commandButton widgetVar="createMapping"
                                             value="#{msgs.createMapping}"
                                             action="#{indexingForm.createMapping(true)}"
                                             update="@form"
                                             disabled="#{indexingForm.indexExists() or indexingForm.indexingInProgress()}"
                                             onclick="createMapping"/>
                            <p:commandButton widgetVar="deleteIndex"
                                             value="#{msgs.deleteIndex}"
                                             action="#{indexingForm.deleteIndex(true)}"
                                             update="@form"
                                             disabled="#{!indexingForm.indexExists() or indexingForm.indexingInProgress()}"
                                             onclick="return confirm('Do you really want to delete the whole index?');deleteIndex();"/>
                            <p:dataTable var="item"
                                         value="#{indexingForm.objectTypes}"
                                         rowStyleClass="#{item eq indexingForm.noneType ? 'ui-helper-hidden' : ''}">
                                <p:column headerText="#{msgs.objectType}">
                                    <h:outputText value="#{item.translation}"/>
                                </p:column>
                                <p:column headerText="#{msgs.startIndexing}">
                                    <p:commandButton widgetVar="startIndexing#{item}"
                                                     value="#{msgs.startIndexing}"
                                                     action="#{indexingForm.startIndexing(item)}"
                                                     update="@form"
                                                     disabled="#{!indexingForm.indexExists() or (indexingForm.indexingInProgress() or indexingForm.getNumberOfDatabaseObjects(item) lt 1)}"
                                                     onclick="PF('#{item}'+'Progress').start();toggleButtons(false);"/>
                                </p:column>
                                <p:column headerText="#{msgs.progress}">
                                    <p:progressBar widgetVar="#{item}Progress"
                                                   value="#{indexingForm.getProgress(item)}"
                                                   ajax="true"
                                                   labelTemplate="{value}%"
                                                   global="false"
                                                   rendered="#{item ne indexingForm.noneType}"/><!-- prevent Null Pointer Exception -->
                                </p:column>
                                <p:column headerText="#{msgs.indexedEntries}">
                                    <h:outputText value="#{indexingForm.getNumberOfIndexedObjects(item)} / #{indexingForm.getNumberOfDatabaseObjects(item)}"/>
                                </p:column>
                                <p:column headerText="#{msgs.status}">
                                    <h:outputText rendered="#{indexingForm.getObjectIndexState(item) eq indexingForm.indexingStartedState}"><i class="fa fa-refresh fa-lg fa-spin"/></h:outputText>
                                    <h:outputText rendered="#{indexingForm.getObjectIndexState(item) eq indexingForm.indexingFailedState}"><i class="fa fa-times fa-lg"/></h:outputText>
                                    <h:outputText rendered="#{indexingForm.getObjectIndexState(item) eq indexingForm.indexingSuccessfulState}"><i class="fa fa-check fa-lg"/></h:outputText>
                                </p:column>
                            </p:dataTable>
                            <table>
                                <tr>
                                    <td>
                                        <h:outputText value="#{msgs.wholeIndex}"/>
                                    </td>
                                    <td>
                                        <p:commandButton widgetVar="startIndexingAll"
                                                         value="#{msgs.startIndexing}"
                                                         action="#{indexingForm.startAllIndexing()}"
                                                         update="@form"
                                                         disabled="#{!indexingForm.indexExists() or indexingForm.indexingInProgress()}"
                                                         onclick="PF('allProgress').start();toggleButtons(false);"/>
                                    </td>
                                    <td>
                                        <p:progressBar widgetVar="allProgress"
                                                       value="#{indexingForm.allIndexingProgress}"
                                                       ajax="true"
                                                       labelTemplate="{value}%"
                                                       global="false"/>
                                    </td>
                                    <td>
                                        <h:outputText value="#{indexingForm.allIndexed} / #{indexingForm.totalCount}"/>
                                    </td>
                                    <td>
                                        <h:outputText rendered="#{indexingForm.indexingInProgress()}"><i class="fa fa-refresh fa-lg fa-spin"/></h:outputText>
                                        <h:outputText rendered="#{indexingForm.allObjectsIndexingState eq indexingForm.indexingFailedState}"><i class="fa fa-times fa-lg"/></h:outputText>
                                        <h:outputText rendered="#{indexingForm.allObjectsIndexingState eq indexingForm.indexingSuccessfulState and not indexingForm.indexingInProgress()}"><i class="fa fa-check fa-lg"/></h:outputText>
                                    </td>
                                </tr>
                            </table>
                            <h:outputText value="Indexing started by '#{LoginForm.myBenutzer.surname}, #{LoginForm.myBenutzer.name}' at #{indexingForm.indexingStartedTime}" rendered="#{not empty indexingForm.indexingStartedTime}"/>
                        </p:panel>
                    </ui:fragment>
                </h:form>
            </p:panel>
        </p:panel>
        <script type="text/javascript">
                    function createMapping() {
                        toggleButtons(false);
                        document.getElementById('indexing_form:create-mapping-loading').style.display='inline';
                        return true;
                    }

                    function deleteIndex() {
                        toggleButtons(false);
                        document.getElementById('indexing_form:delete-index-loading').style.display='inline';
                        return true;
                    }

                    function toggleProgressPolling(message) {
                        if (message.includes("indexing_started")) {
                            PF('progressPoll').start();
                        } else if (message.includes("indexing_finished")) {
                            PF('progressPoll').stop();
                            $('.refreshTable').click();
                        } else if (message.includes("mapping")) {
                            $('.refreshTable').click();
                            if (message.endsWith("started")) {
                                PF('progressPoll').start();
                            } else if (message.endsWith("finished")) {
                                document.getElementById('indexing_form:create-mapping-loading').style.display='none';
                                PF('progressPoll').stop();
                            } else if (message.endsWith("failed")) {
                                document.getElementById('indexing_form:create-mapping-loading').style.display='none';
                                PF('progressPoll').stop();
                            }
                        } else if (message.includes("deletion")) {
                            $('.refreshTable').click();
                            if (message.endsWith("started")) {
                                PF('progressPoll').start();
                            }
                            if (message.endsWith("finished")) {
                                document.getElementById('indexing_form:delete-index-loading').style.display='none';
                                PF('progressPoll').stop();
                            } else if (message.endsWith("failed")) {
                                document.getElementById('indexing_form:delete-index-loading').style.display='none';
                                PF('progressPoll').stop();
                            }
                        }
                        $('.refreshTable').click();
                    }

                    function toggleButtons(state) {
                        var objectTypes = JSON.parse('#{indexingForm.objectTypesAsJson}');
                        var noneType = "#{indexingForm.noneType}";
                        if(state) {
                            PF('createMapping').enable();
                            PF('deleteIndex').enable();
                            for (var i = 0; i &lt; objectTypes.length; i++) {
                                if (objectTypes[i] !== noneType) {
                                    PF('startIndexing' + objectTypes[i]).enable();
                                }
                            }
                            PF('startIndexingAll').enable();
                        } else {
                            PF('createMapping').disable();
                            PF('deleteIndex').disable();
                            for (var i = 0; i &lt; objectTypes.length; i++) {
                                if (objectTypes[i] !== noneType) {
                                    PF('startIndexing' + objectTypes[i]).disable();
                                }
                            }
                            PF('startIndexingAll').disable();
                        }
                    }
            </script>
    </ui:define>
</ui:composition>
